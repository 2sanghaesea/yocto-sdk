Yocto with LSDK Components
=======================
Yocto with LSDK components provides recipes for the last Yocto release to use the latest and greatest components from LSDK as they get released. This eventually makes its way into the next community Yocto release at yoctoproject.org. 

Supported boards
================
ls1012ardb
ls1012afrwy
ls1021atwr
ls1043ardb
ls1046ardb
ls1088ardb-pb
ls2088ardb
lx2160ardb
mpc8548cds
p2020rdb
t1042d4rdb
t1042d4rdb-64b
t1024rdb
t2080rdb
t4240rdb
p1020rdb
p2041rdb
p3041ds
p4080ds
p5040ds
p5040ds-64b
t1024rdb-64b
t2080rdb-64b
t4240rdb-64b
 

Download Yocto Layer
===================================
To make sure the build host is prepared for Yocto running and build, please follow below guide to prepare the build environment. 

https://www.yoctoproject.org/docs/2.6/brief-yoctoprojectqs/brief-yoctoprojectqs.html

1. Get the Yocto layers from repo manifest:
   The following is the step of how to use repo utility to download all Yocto layers according to the repo manifest

   Install the repo utility:
   $: mkdir ~/bin
   $: curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
   $: chmod a+x ~/bin/repo

   Download the Yocto layers:
   $: export PATH=${PATH}:~/bin
   $: mkdir yocto-sdk
   $: cd yocto-sdk
   $: repo init -u ssh://git@bitbucket.sw.nxp.com/dnyocto/yocto-sdk.git -b master
   $: repo sync --no-clone-bundle

2. Get Yocto layers from community repository
   The following is the step of how to download all Yocto layers through git command:
   $: mkdir yocto-sdk
   $: cd yocto-sdk
   $: mkdir sources
   $: cd sources
   $: git clone git://git.yoctoproject.org/poky
   $: cd  poky 
   $: git reset --hard 0e392026ffefee098a890c39bc3ca1f697bacb52
   $: cd ..
   $: git clone git://git.openembedded.org/meta-openembedded
   $: cd meta-openembedded
   $: git reset --hard 0477c76116cd1dc479d0df0e9721cbbd729ac4d2
   $: cd ..
   $: git clone git://git.yoctoproject.org/meta-freescale
   $: cd  meta-freescale
   $: git reset --hard 3cf8e849e501c1243c0710889e97d14477688784 
   $: cd ..
   $: git clone git://git.yoctoproject.org/meta-virtualization
   $: cd meta-virtualization 
   $: git reset --hard abcdb5841dfffc1ff4410f6c149dc304d4ac5e42
   $: cd ..
   $: git clone git://git.yoctoproject.org/meta-cloud-services
   $: cd meta-cloud-services
   $: git reset --hard 215b97571f52d43915eda1fdc5cd80719687abcd
   $: cd ..
   $: git clone git://git.yoctoproject.org/meta-security
   $: cd meta-security
   $: git reset --hard 5959e4f4bf6120edf82c71e6c7a0b6118f275419
   $: cd ..
   $: git clone https://github.com/Freescale/meta-freescale-distro
   $: cd meta-freescale-distro
   $: git reset --hard 8fbf269e32650cd9392603c1c81d8ace4111f89b
   $: cd ..
   $: git clone https://source.codeaurora.org/external/qoriq/qoriq-components/meta-qoriq-demos
   $: cd meta-qoriq-demos
   $: get reset --hard 645cbb692b0a2c77e66fbd19cff328acb86e0a8a
   $: cd ..
   $: cp sources/meta-qoriq-demos/scripts/setup-env ./

Building images
===============
Take ls1088ardb as an example:
$: . ./setup-env -m ls1088ardb
$: bitbake fsl-image-networking
or:
$: bitbake fsl-image-networking-full

Images will be found under tmp/deploy/images/ls1088ardb/.

Note:Kernel configuration options to enable upstream version of DPAA driver for PowerPC targets:
     CONFIG_FSL_DPAA,  CONFIG_FSL_FMAN and CONFIG_FSL_DPAA_ETH need to be enabled in kernel menuconfig as below:
     Device Drivers  --->
        SOC (System On Chip) specific Drivers  --->
            [*] Freescale DPAA 1.x support  --->
     Device Drivers  --->
        [*] Network device support  --->
        [*]   Ethernet driver support  --->
              <*>     FMan support
              <*>       DPAA Ethernet  ----
  
Booting the images for supported boards
=======================================
Prerequisites:
1. TFTP server being setup to hold the images.
2. A serial cable connected from your PC to UART1
3. Ethernet connected to the first ethernet port on the board.

Booting with fsl-image-networking rootfs:

1.Power up or reset the board and press a key on the terminal when prompted
  to get to the U-Boot command line.

2.Set up the environment in U-Boot:
  => setenv ipaddr <board_ipaddr>
  => setenv serverip <tftp_serverip>
  For ls1021atwr:
  => setenv bootargs root=/dev/ram0 rw console=ttyS0,115200 ramdisk_size=0x1000000
  For ls1012a,ls1043a,ls1046a
  => setenv bootargs root=/dev/ram0 rw console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 ramdisk_size=0x10000000
  For ls1088ardb: 
  => setenv bootargs root=/dev/ram0 rw console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 ramdisk_size=0x2000000 default_hugepagesz=2m hugepagesz=2m hugepages=512
  For ls2088ardb:
  => setenv bootargs root=/dev/ram0 rw console=ttyS1,115200 earlycon=uart8250,mmio,0x21c0600 ramdisk_size=0x2000000 default_hugepagesz=1024m hugepagesz=1024m hugepages=8
  For mpc8548cds:
  => setenv bootargs         root=/dev/ram rw console=ttyS1,115200 ramdisk_size=1000000 log_buf_len=128K
  For t1024rdb:
  => setenv bootargs         root=/dev/ram rw console=ttyS1,115200 ramdisk_size=30000000 log_buf_len=128K
  For other PowerPC targets:
  => setenv bootargs         root=/dev/ram rw console=ttyS0,115200 ramdisk_size=1000000 log_buf_len=128K

3.ls1088ardb and ls2088ardb need run below commands to enable DPAA2 ethernet in Linux:
  For ls1088ardb:
  => sf probe 0:0
  => sf read 0x80000000 0xA00000 0x100000
  => sf read 0x80100000 0xE00000 0x100000
  => fsl_mc start mc 0x80000000 0x80100000
  => sf read 0x80200000 0xd00000 0x100000
  => fsl_mc lazyapply dpl 0x80200000
  For ls2088ardb:
  => fsl_mc start mc 0x580a00000 0x580e00000
  => fsl_mc lazyapply dpl 0x580d00000

4.Download Images and bootup:
  For ls1021atwr:
  => tftp 82000000 uImage-ls1021atwr.bin
  => tftp 88000000 fsl-image-networking-ls1021atwr.ext2.gz.u-boot
  => tftp 8f000000 uImage-ls1021a-twr.dtb
  => bootm 82000000 88000000 8f000000
  For mpc8548cds:
  => tftpboot  0x01000000 uImage-mpc8548cds.bin
  => tftpboot  0x03000000 fsl-image-networking-mpc8548cds.ext2.gz.u-boot
  => tftpboot  0x02000000 uImage-mpc8548cds_32b.dtb
  => bootm 0x01000000 0x03000000 0x02000000
  For p1020rdb,p2041rdb,p3041ds,p4080ds,p5040ds:
  => tftpboot  0x01000000 uImage-p2020rdb.bin
  => tftpboot  0x02000000 fsl-image-networking-p2020rdb.ext2.gz.u-boot
  => tftpboot  0x00c00000 uImage-p2020rdb-pc_32b.dtb
  => bootm 0x01000000 0x04000000 0x02000000
  For other PowerPC targets:
  => tftpboot  0x01000000 uImage-<board>.bin
  => tftpboot  0x05000000 fsl-image-networking-<board>.ext2.gz.u-boot
  => tftpboot  0x02000000 uImage-<board>.dtb
  => bootm 0x01000000 0x05000000 0x02000000
  For other boards:
  => tftp a0000000 fitImage-fsl-image-networking-<board>.bin
  => bootm a0000000

Booting with fsl-image-networking-full rootfs:

1.Prepare the media (sata/sd/usb) and format it as ext2 format
  mount the ext2 partition and extract a full rootfs in this partition. After
  uncompressing, unmount this partition.

2.Power up or reset the board and press a key on the terminal when prompted
  to get to the U-Boot command line.

3.Set up the environment in U-Boot:
  => setenv ipaddr <board_ipaddr>
  => setenv serverip <tftp_serverip>
  For ls1021atwr:
  => setenv bootargs root=/dev/sda* rootdelay=5 rw console=ttyS0,115200
  For ls1012a,ls1043a,ls1046a
  => setenv bootargs root=/dev/sda* rootdelay=5 rw console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500
  For ls1088ardb:
  => setenv bootargs root=/dev/sda* rootdelay=5 rw console=ttyS0,115200 earlycon=uart8250,mmio,0x21c0500 default_hugepagesz=2m hugepagesz=2m hugepages=512
  For ls2088ardb:
  => setenv bootargs root=/dev/sda* rootdelay=5 rw console=ttyS1,115200 earlycon=uart8250,mmio,0x21c0600 default_hugepagesz=1024m hugepagesz=1024m hugepages=8
  For mpc8548cds:
  => setenv bootargs root=/dev/sda* rootdelay=5 rw console=ttyS1,115200 log_buf_len=128K
  For other PowerPC targets:
  => setenv bootargs root=/dev/sda* rootdelay=5 rw console=ttyS0,115200 log_buf_len=128K

4.ls1088ardb and ls2088ardb need run below commands to enable DPAA2 ethernet in Linux:
  For ls1088ardb:
  => sf probe 0:0
  => sf read 0x80000000 0xA00000 0x100000
  => sf read 0x80100000 0xE00000 0x100000
  => fsl_mc start mc 0x80000000 0x80100000
  => sf read 0x80200000 0xd00000 0x100000
  => fsl_mc lazyapply dpl 0x80200000
  For ls2088ardb:
  => fsl_mc start mc 0x580a00000 0x580e00000
  => fsl_mc lazyapply dpl 0x580d00000

5.Download Image and bootup:
  For ls1021atwr:
  => tftp 82000000 uImage-ls1021atwr.bin
  => tftp 8f000000 uImage-ls1021a-twr.dtb
  => bootm 82000000 - 8f000000
  For mpc8548cds:
  => tftpboot  0x01000000 uImage-mpc8548cds.bin
  => tftpboot  0x02000000 uImage-mpc8548cds_32b.dtb
  => bootm 0x01000000 - 0x02000000
  For p2020rdb:
  => tftpboot  0x01000000 uImage-p2020rdb.bin
  => tftpboot  0x00c00000 uImage-p2020rdb-pc_32b.dtb
  => bootm 0x01000000 - 0x00c00000
  For other PowerPC targets:
  => tftpboot  0x01000000 uImage-<board>.bin
  => tftpboot  0x02000000 uImage-<board>.dtb
  => bootm 0x01000000 - 0x02000000
  For other boards:
  => tftp a0000000 fitImage-<board>.bin
  => bootm a0000000:kernel@1 - a0000000:<fdt name>
  Note: <fdt name> can be got by command:
  $: grep fdt@ fitImage-its-<board>.its

6. Secure boot
   For information on how to use secure boot, see the "6.1 Secure boot" section. 
   You can find at  https://www.nxp.com/support/developer-resources/run-time-software/linux-software-and-development-tools/layerscape-software-development-kit:LAYERSCAPE-SDK?tab=Documentation_Tab
 

Known Issues
============
The following known issues exist for Qoriq targets.
-----------------------------------------------------------------------------------------------------------------------
| ID          | Description                     | Disposition | Opened In | Workarounds                               |
-----------------------------------------------------------------------------------------------------------------------
| QLINUX-10188| PM sleep test failed on         | Open        | LSDK-1809 |                                           |
|             | T1042D4RDB                      |             |           |                                           |
|             |                                 |             |           |                                           |
|             |                                 |             |           |                                           |
|---------------------------------------------------------------------------------------------------------------------|
| QLINUX-9692 | T2 optical_xfi port not works   | Open        | LSDK-1809 | update t2080rdb.dts                       |
|             |                                 |             |           |      ethernet@f0000 {                     |
|             |                                 |             |           |  -     phy-handle = <&xg_cs4315_phy1>;    |
|             |                                 |             |           |  +     phy-handle = <&xg_cs4315_phy2>;    |
|             |                                 |             |           |        phy-connection-type = "xgmii";     |
|             |                                 |             |           |       };                                  |
|             |                                 |             |           |      ethernet@f2000 {                     |
|             |                                 |             |           |  -     phy-handle = <&xg_cs4315_phy2>;    |
|             |                                 |             |           |  +     phy-handle = <&xg_cs4315_phy1>;    |
|             |                                 |             |           |        phy-connection-type = "xgmii";     |
|             |                                 |             |           |       };                                  |
|             |                                 |             |           |                                           |
----------------------------------------------------------------------------------------------------------------------|
| QSDK-5118   |Openssl offload :                |             |           |                                           |
|             |asymmetric_ciphers_rsa_caam_jr   |             |           |                                           |
|             |failed to work                   | Open        | LSDK-1809 |                                           |
|             |                                 |             |           |                                           |
|             |                                 |             |           |                                           |
|             |                                 |             |           |                                           |
----------------------------------------------------------------------------------------------------------------------|
|QLINUX-10670 |Guest rootfs boot failed on      |             |           |                                           |
|             |T2080RDB and T4240RDB with       |             |           |                                           |
|             |ext2.gz rootfs                   | Open        | LSDK-1809 |                                           |
|             |                                 |             |           |                                           |
|             |                                 |             |           |                                           |
|             |                                 |             |           |                                           |
|---------------------------------------------------------------------------------------------------------------------|
