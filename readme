QorIQ Yocto SDK Project
=======================
QorIQ Yocto SDK is a complete Linux kit for NXP QorIQ SoC's and 
the reference and evaluation boards.

Supported board
================
ls1012ardb

Setting up to use the Yocto project
===================================
Follow below guide to get your build host ready:
http://www.yoctoproject.org/docs/2.4/yocto-project-qs/yocto-project-qs.html#yp-resources

Install the repo utility:
$: mkdir ~/bin
$: curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
$: chmod a+x ~/bin/repo

Download the metadata:
$: export PATH=${PATH}:~/bin
$: mkdir yocto-sdk
$: cd yocto-sdk
$: repo init -u https://source.codeaurora.org/external/qoriq/qoriq-components/yocto-sdk -b refs/tags/LSDK-17.12-ls1012a-AB-tc1
$: repo sync --no-clone-bundle

Building images which includes the dpdk and vpp
===============================================
1. Build dependence for VPP.
$ cd yocto-sdk
$ . ./setup-env -m ls1012ardb
$ bitbake dpdk
$ bitbake fsl-toolchain     # yocto standalone toolchain is generated in <path>/yocto-sdk/build_ls1012ardb/tmp/deploy/sdk folder

2. Build VPP.
<1>. Install the yocto standalone toolchain.
$  ./fsl-qoriq-glibc-x86_64-fsl-toolchain-aarch64-toolchain-2.4.1.sh
<2>. Compile VPP using the toolchain you just installed.
$  git clone https://source.codeaurora.org/external/qoriq/qoriq-components/vpp
$  cd vpp; git checkout ls1012_AB_tc1
$  export DPDK_PATH=<path>/yocto-sdk/build_ls1012ardb/tmp/work/ls1012ardb-fsl-linux/dpdk/17.11-r0/git
$  export OPENSSL_PATH=<path>/yocto-sdk/build_ls1012ardb/tmp/work/ls1012ardb-fsl-linux/dpdk/17.11-r0/recipe-sysroot
$  cd build-root; make distclean; ./bootstrap.sh
$  source  <your_yocto_standalone_toolchain_install_path>/environment-setup-aarch64-fsl-linux
$  export CFLAGS="-I${DPDK_PATH}/arm64-dpaa-linuxapp-gcc/include"
$  export LDFLAGS="-L${DPDK_PATH}/arm64-dpaa-linuxapp-gcc/lib"
$  make V=0 PLATFORM=dpaa2 TAG=dpaa2 install-rpm   # All the rpm packages will be generated in current folder

3. Merge VPP binaries and libs into yocto rootfs and build kernelitb.
<1>. Copy the following three rpm packages into the <path>/yocto-sdk/sources/meta-qoriq-demos/recipes-extended/merge-file/merge-file/merge folder
vpp-18.01_ls1012-release.x86_64.rpm
vpp-lib-18.01_ls1012-release.x86_64.rpm
vpp-plugins-18.01_ls1012-release.x86_64.rpm

<2>. Extract the contents from above rpms
$ cd <path>/yocto-sdk/sources/meta-qoriq-demos/recipes-extended/merge-file/merge-file/merge
$ rpm2cpio vpp-18.01_ls1012-release.x86_64.rpm | cpio -idmv; rm -fr usr/share; rm vpp-18.01_ls1012-release.x86_64.rpm
$ rpm2cpio vpp-lib-18.01_ls1012-release.x86_64.rpm | cpio -idmv; rm -fr usr/share;mv usr/lib64 usr/lib; rm vpp-lib-18.01_ls1012-release.x86_64.rpm
$ rpm2cpio vpp-plugins-18.01_ls1012-release.x86_64.rpm | cpio -idmv; rm -fr usr/share; rm vpp-plugins-18.01_ls1012-release.x86_64.rpm

<3>. Build kernelitb
$ source <path>/yocto-sdk/build_ls1012ardb/SOURCE_THIS
$ bitbake fsl-image-kernelitb     # All the images will be generated in <path>/yocto-sdk/build_ls1012ardb/tmp/deploy/images/ls1012ardb/ folder
